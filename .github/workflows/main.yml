name: Django CD

on:
  push:
    branches:
      - main
  pull_request:
    branches:
      - main

jobs:

  build:
    runs-on: ubuntu-latest

    steps:
      - name: Checkout repository
        uses: actions/checkout@v4

      - name: Set up Docker Compose
        run: |
          sudo apt-get update
          sudo apt-get -y install docker-compose

      - name: Create env file
        run: |
          echo "${{ secrets.ENV_FILE }}" > ./ping-web/.env
          mkdir -p ../cms-django/biscuit-web
          echo "${{ secrets.ENV_FILE }}" > ../cms-django/biscuit-web/.env

      - name: Create env_db file
        run: |
          echo "${{ secrets.ENV_DB_FILE }}" > .env.db

#      - name: Create Certificates
#        run: |
#          echo "${{ secrets.FULLCHAIN }}" > ./nginx/fullchain.pem
#          chmod 600 ./nginx/fullchain.pem
#          echo "${{ secrets.PRIVKEY }}" > ./nginx/privkey.pem
#          chmod 600 ./nginx/privkey.pem

      - name: Build and push Docker image
        run: |
          docker-compose build
          echo "${{ secrets.DOCKER_PASSWORD }}" | docker login -u "${{ secrets.DOCKER_USERNAME }}" --password-stdin
          docker push "${{ secrets.DOCKER_USERNAME }}/${{ secrets.PROJECT_NAME }}_web:latest"

  deploy:
    needs: build
    runs-on: ubuntu-latest

    steps:
      - name: Checkout repository
        uses: actions/checkout@v4

      - name: Log in to Docker Hub
        run: echo "${{ secrets.DOCKER_PASSWORD }}" | docker login -u "${{ secrets.DOCKER_USERNAME }}" --password-stdin

      - name: Set up SSH for deployment
        run: |
          echo "${{ secrets.SSH_PRIVATE_KEY }}" > key.pem
          chmod 600 key.pem
      - name: Deploy to environment
        run: |
          ssh -o StrictHostKeyChecking=no -i key.pem -tt ${{ secrets.SSH_USERNAME }}@${{ secrets.SSH_HOST }} 'cd ${{ secrets.PROJECT_PATH }} && \
           git pull && \
           ./restart-docker-compose.bash'
